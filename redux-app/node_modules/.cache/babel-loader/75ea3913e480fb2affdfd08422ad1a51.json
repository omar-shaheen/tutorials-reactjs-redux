{"ast":null,"code":"import { DECREMENT, INCREMENT, INC_BY_VALUE } from \"../actions/types\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case INC_BY_VALUE:\n      return { ...state,\n        count: state.count + action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"names":["DECREMENT","INCREMENT","INC_BY_VALUE","counterReducer","state","count","action","type","payload"],"sources":["C:/Users/any/Desktop/reactjs-redux/redux-app/src/redux/reducers/counterReducer.js"],"sourcesContent":["import { DECREMENT, INCREMENT, INC_BY_VALUE } from \"../actions/types\";\r\n\r\nconst counterReducer = (state = { count: 0 }, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return { ...state, count: state.count + 1 };\r\n\r\n    case DECREMENT:\r\n      return { ...state, count: state.count - 1 };\r\n\r\n    case INC_BY_VALUE:\r\n      return { ...state, count: state.count + action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,kBAAnD;;AAEA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzB;IAAEC,KAAK,EAAE;EAAT,CAAyB;EAAA,IAAXC,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,SAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYC,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;MAAjC,CAAP;;IAEF,KAAKL,SAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYC,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;MAAjC,CAAP;;IAEF,KAAKH,YAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYC,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcC,MAAM,CAACE;MAAxC,CAAP;;IAEF;MACE,OAAOJ,KAAP;EAXJ;AAaD,CAdD;;AAgBA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}